/*
 * Class: CMSC214 
 * Instructor: Mark Estep
 * Description: A program that has the methods for Doubly Linked List with linkedListIterator methods
 * This program implements the JUnit test file that tests TwoWayLinkedList class
 * Due: 10/25/2020
 * I pledge that I have completed the programming assignment independently.
   I have not copied the code from a student or any source.
   I have not given my code to any student.
   Print your Name here: _Derya O. Kurin
 */



package o_Kurin_D_Project_7;

import static org.junit.Assert.assertEquals;
import static org.junit.jupiter.api.Assertions.*;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import o_Kurin_D_Project_7.Exercise_24_03.TwoWayLinkedList.LinkedListIterator;

class Exercise_24_03Test extends Exercise_24_03 {
	TwoWayLinkedList<Integer> twl1;
	TwoWayLinkedList<Integer[]> twl2;
	
	@BeforeEach
	void setUp() throws Exception {
		Integer[] intList = {2,4,6,23,12,4};
		twl1 = new TwoWayLinkedList<Integer>();
		twl2 = new TwoWayLinkedList(intList);
	}

	@AfterEach
	void tearDown() throws Exception {
		twl1.clear();
		twl2.clear();
	}

	@Test
	void test() {
		//Add 5 integers into twl1
		twl1.add(0, 4);
		twl1.add(1, 14);
		twl1.add(2, 24);
		twl1.add(3, 34);
		twl1.add(4, 44);
		
		//Testing twl2 id the constructor works
		assertEquals("[2, 4, 6, 23, 12, 4]", twl2.toString());
		
		//Testing twl1 with the methods:
		assertEquals(4, twl1.getFirst());
		assertEquals(44, twl1.getLast());
		assertEquals(24, twl1.get(2));
		assertEquals("[4, 14, 24, 34, 44]", twl1.toString());
		
		twl1.addFirst(8);
		assertEquals(8, twl1.getFirst());
		
		twl1.addLast(10);
		assertEquals(10, twl1.getLast());	
		
		
		twl1.add(2, 54);
		assertEquals(54, twl1.get(2));
		
		//Remove 54 from the index 2
		assertEquals(54, twl1.remove(2));
		
		// Return 8 as the old head
		assertEquals(8, twl1.removeFirst());
		
		//Removing 10 from the tail	
		assertEquals(10, twl1.removeLast());
		
		//Cursor is at the head in twl2 [2, 4, 6, 23, 12, 4]
		LinkedListIterator it = (LinkedListIterator) twl2.listIterator();
		
		assertEquals(4, it.next());
		
		//Cursor is at the 3rd index: 23
		//Testing iterator(int index)
		LinkedListIterator it2 = (LinkedListIterator) twl2.listIterator(3);
		
		//Testing method previous with an iterator generated by listIterator(int index)
		assertEquals(6, it2.previous());

	}

}
